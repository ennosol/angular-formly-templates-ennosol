angular.module("formlyEnnosol",["formly","NgSwitchery","tsSelect2","angular-cron-jobs"],["formlyConfigProvider",function(t){"use strict";t.setWrapper([{name:"label",templateUrl:"/src/templates/label.html"},{name:"addons",templateUrl:"/src/templates/addons.html"},{name:"fieldset",templateUrl:"/src/templates/fieldset.html"},{name:"validation",templateUrl:"/src/templates/error.html"}]),t.setType([{name:"nested",wrapper:["fieldset"],template:'<pre>{{options}}</pre><formly-form model="model[options.key]" fields="options.fieldGroup"></formly-form>'},{name:"button",templateUrl:"/src/templates/button.html"},{name:"checkbox",templateUrl:"/src/templates/checkbox.html",wrapper:["validation"]},{name:"switch",templateUrl:"/src/templates/switch.html",wrapper:["label","validation"]},{name:"radio",templateUrl:"/src/templates/radio.html",wrapper:["label","validation"]},{name:"radio-inline",templateUrl:"/src/templates/radio-inline.html",wrapper:["label","validation"]},{name:"input",templateUrl:"/src/templates/input.html",wrapper:["addons","label","validation"]},{name:"date",templateUrl:"/src/templates/date.html",wrapper:["addons","label","validation"]},{name:"time",templateUrl:"/src/templates/time.html",wrapper:["addons","label","validation"]},{name:"daterange",templateUrl:"/src/templates/daterange.html",wrapper:["addons","label","validation"]},{name:"coordinate",templateUrl:"/src/templates/coordinate.html",wrapper:["addons","label","validation"]},{name:"static",templateUrl:"/src/templates/static.html",wrapper:["addons","label"]},{name:"img",templateUrl:"/src/templates/img.html",wrapper:["addons","label"]},{name:"textarea",templateUrl:"/src/templates/textarea.html",wrapper:["addons","label","validation"]},{name:"spinner",templateUrl:"/src/templates/spinner.html",wrapper:["addons","label","validation"]},{name:"search",templateUrl:"/src/templates/search.html",wrapper:["label","validation"]},{name:"tags",templateUrl:"/src/templates/tags.html",wrapper:["label","validation"]},{name:"select",templateUrl:"/src/templates/select.html",wrapper:["label","validation"]},{name:"multiSelect",templateUrl:"/src/templates/multiselect.html",wrapper:["label","validation"]},{name:"repeatSection",templateUrl:"/src/templates/repeat-section.html",wrapper:[],controller:"RepeatSectionController"},{name:"sortableRepeatSection",templateUrl:"/src/templates/sortable-repeat-section.html",wrapper:[],controller:"RepeatSectionController"},{name:"cron",templateUrl:"/src/templates/cron.html",wrapper:["label"]}])}]),angular.module("formlyEnnosol").service("formlyEnnosolCfg",["$q","$http",function(t,e){this.configuration=function(){var o=this;o.url="",o.method="get",o.delay=250,o.idField="id",o.dataAccessor="",o.termParam="query",o.termAccessor="term",o.pageParam="page",o.pageAccessor="page",o.data=function(t){var e={};return e[o.cfg.termParam]=t[o.cfg.termAccessor],e[o.cfg.pageParam]=t[o.cfg.pageAccessor],e},o.processResults=function(t,e){if(""!==o.cfg.dataAccessor){var a=o.cfg.dataAccessor.split("--");do{var l=a.splice(0,1);angular.isNumber(l)&&(l=1*l),t=t[l]}while(a.length>0)}return"id"!==o.cfg.idField&&t.forEach(function(t,e,a){a[e].id=a[e][o.cfg.idField]}),{results:t}},o.templateResult=function(t){return t.text},o.templateSelection=function(t){return t.text},o.escapeMarkup=function(t){return t},o.getConfig=function(t){return"undefined"==typeof t&&(t={}),o.cfg=angular.merge({},o,t),{ajax:{type:o.cfg.method,method:o.cfg.method,dataType:"json",delay:o.cfg.delay,cache:!0,transport:o.cfg.jTransport,url:o.cfg.url,data:o.cfg.data,params:o.cfg.data,processResults:o.cfg.processResults},templateResult:o.cfg.templateResult,templateSelection:o.cfg.templateSelection,escapeMarkup:o.cfg.escapeMarkup}},o.getConfig({}),o.jTransport=function(t,e,o){var a=$.ajax(t);return a.then(e),a.fail(o),a},o.aTransport=function(o,a,l){var n=t.defer();return o.method=o.type,o.params=o.data,angular.extend({timeout:n},o),e(o).then(function(t){a(t.data)},l),{abort:n.resolve}}}}]),angular.module("formlyEnnosol").controller("RepeatSectionController",["$scope","$timeout",function(t,e){function o(e){t.toFields=e,t.$watch("toFields",function(){angular.forEach(c,function(e){angular.merge(e,t.toFields)})},!0);var o=angular.copy(t.toFields);return n(o),c.push(o),o}function a(){t.model[t.options.key]=t.model[t.options.key]||[];var e=t.model[t.options.key],o=(e[e.length-1],{open:!0});e.push(o)}function l(e){t.model[t.options.key].splice(e,1)}function n(t){p++,angular.forEach(t,function(t,e){return t.fieldGroup?void n(t.fieldGroup):(t.templateOptions&&t.templateOptions.fields&&n(t.templateOptions.fields),void(t.id=t.id||t.key+"_"+e+"_"+p+i(0,9999)))})}function i(t,e){return Math.floor(Math.random()*(e-t))+t}function s(e){var o,a=[];angular.forEach(t.options.templateOptions.panel.header.captionFields,function(l,n){"@"===l.substr(0,1)?(l=l.replace("$idx",e),a.push(t.$eval(l.substr(1)))):(o=d(t.model[t.options.key][e],l),"undefined"!=typeof o&&a.push(o))});try{var l=vsprintf(t.options.templateOptions.panel.header.captionFormat,a)}catch(n){l=""}finally{return l}}function r(e,o){var a=t.options.templateOptions.fields[e].templateOptions.options,l=t.options.templateOptions.fields[e].key,n=d(t.model[t.options.key][o],l);return a[n]||""}function d(t,e){if("undefined"!=typeof e){e=e.replace(/\[(\w+)\]/g,".$1"),e=e.replace(/^\./,"");for(var o=e.split("."),a=0,l=o.length;l>a;++a){var n=o[a];if(!(n in t))return;t=t[n]}}return t}var p=1,c=[];t.formOptions={formState:t.formState},t.addNew=a,t.removeItem=l,t.copyFields=o,t.getPanelHeader=s,t.getSelectValue=r}]),angular.module("formlyEnnosol").directive("nslError",function(){return{restrict:"A",link:function(t,e,o){$(e).next().addClass("has-error"),t.$on("$destroy",function(){$(e).next().removeClass("has-error")})}}}),angular.module("formlyEnnosol").directive("nslFormlyCron",function(){return{restrict:"C",require:"ngModel",link:function(t,e,o,a){t.$watch("cronOutput",function(){a.$setViewValue(t.cronOutput)})}}}),angular.module("formlyEnnosol").directive("nslFormlyDatepicker",["$timeout",function(t){return{restrict:"CA",scope:{datePickerOptions:"="},link:function(e,o){var a=angular.extend({autoclose:!0},e.datePickerOptions);t(function(){$(o).val($(o).val().substring(0,10)),$(o).datepicker(a).on("changeDate",function(){o.trigger("input")})},0)}}}]),angular.module("formlyEnnosol").directive("nslFormlyTimepicker",["$timeout",function(t){return{restrict:"C",link:function(e,o){t(function(){$(o).clockpicker({placement:"bottom",align:"left",autoclose:!0,"default":"now"}),$(o).clockpicker().on("change",function(){o.find("input").trigger("input")})},0)}}}]),angular.module("formlyEnnosol").directive("nslTouchspin",["$timeout",function(t){return{restrict:"A",scope:{min:"=",max:"=",step:"=",stepInterval:"=",decimals:"=",boostAt:"=",maxBoostedStep:"=",prefix:"=",postfix:"=",verticalButtons:"="},link:function(e,o,a){"undefined"==typeof e.min&&(e.min=Number.MIN_SAFE_INTEGER||-Number.MAX_VALUE),"undefined"==typeof e.max&&(e.max=Number.MAX_SAFE_INTEGER||Number.MAX_VALUE),("undefined"==typeof e.step||0===e.step)&&(e.step=1),$(o).TouchSpin({min:e.min,max:e.max,step:e.step,stepinterval:e.stepInterval||50,decimals:e.decimals||0,boostat:e.boostAt||5,maxboostedstep:e.maxBoostedStep||10,prefix:e.prefix||"",postfix:e.postfix||"",verticalbuttons:e.verticalButtons||!1}),t(function(){$(o).on("change",function(){o.trigger("input")})},0)}}}]),angular.module("formlyEnnosol").run(["$templateCache",function(t){t.put("/src/templates/addons.html",'<div ng-class="{\'input-group\': to.addonLeft || to.addonRight}"><div class="input-group-addon {{to.addonLeft.bgClassName}}" ng-if="to.addonLeft" ng-style="{cursor: to.addonLeft.onClick ? \'pointer\' : \'inherit\'}" ng-click="to.addonLeft.onClick(options, this)"><i class="{{to.addonLeft.className}}" ng-if="to.addonLeft.className"></i> <span ng-if="to.addonLeft.text" ng-bind-html="to.addonLeft.text"></span></div><formly-transclude></formly-transclude><div class="input-group-addon {{to.addonRight.bgClassName}}" ng-if="to.addonRight" ng-style="{cursor: to.addonRight.onClick ? \'pointer\' : \'inherit\'}" ng-click="to.addonRight.onClick(options, this)"><i class="{{to.addonRight.className}}" ng-if="to.addonRight.className"></i> <span ng-if="to.addonRight.text" ng-bind-html="to.addonRight.text"></span></div></div>'),t.put("/src/templates/button.html",'<div class="form-group" ng-hide="to.hide"><button type="button" title="{{to.title}}" ng-class="to.className" ng-disabled="to.disabled" ng-click="to.click(id)" ng-bind-html="to.text"></button></div>'),t.put("/src/templates/checkbox.html",'<div class="checkbox clip-check check-primary" ng-hide="to.hide"><input type="checkbox" ng-disabled="to.readOnly || to.disabled" id="{{id}}-chk" ng-model="model[options.key]"> <label for="{{id}}-chk">{{to.label}} {{to.required ? \'*\' : \'\'}}</label></div>'),t.put("/src/templates/coordinate.html",'<div class="input-group" ng-hide="to.hide"><input class="form-control text-center" id="{{id}}_lat" name="{{id}}_lat" ng-model="model[options.key][\'lat\']" placeholder="{{to.placeholder.lat}}" ng-readonly="{{to.readOnly}}" ng-disabled="to.disabled" type="text"> <span class="input-group-addon {{to.separator.bgClassName}}" style="min-width:38px;border-right:0;border-left:0;min-height:34px;{{to.separator.style}}" ng-click="to.separator.click(id)" title="{{to.separator.title}}"><i class="{{to.separator.className}}" ng-if="to.separator.className"></i> <span ng-if="to.separator.text">{{to.separator.text}}</span></span> <input class="form-control text-center" id="{{id}}_lng" name="{{id}}_lng" ng-model="model[options.key][\'lng\']" placeholder="{{to.placeholder.lng}}" ng-readonly="{{to.readOnly}}" ng-disabled="to.disabled" type="text"></div>'),t.put("/src/templates/cron.html",'<div ng-hide="to.hide"><cron-selection class="nslFormlyCron" output="cronOutput" config="to.cronConfig" init="to.initData" ng-disabled="to.readOnly || to.disabled" ng-model="model[options.key]"></cron-selection></div>'),t.put("/src/templates/date.html",'<div class="form-group" ng-hide="to.hide"><input class="form-control show text-center nslFormlyDatepicker" data-provide="{{to.readOnly || to.disabled ? \'\' : \'datepicker\'}}" ng-model="model[options.key]" placeholder="{{to.placeholder}}" ng-readonly="{{to.readOnly}}" ng-disabled="to.disabled" type="text" data-date-format="{{to.datepicker.format || \'yyyy-mm-dd\'}}" data-date-language="{{to.datepicker.language}}" data-date-weekstart="{{to.datepicker.weekStart}}"> <span class="{{to.feedback.className}} form-control-feedback">{{to.feedback.text}}</span></div>'),t.put("/src/templates/daterange.html",'<div class="form-group" ng-hide="to.hide"><div class="input-daterange input-group" data-provide="datepicker" data-date-format="{{to.datepicker.format || \'yyyy-mm-dd\'}}" data-date-language="{{to.datepicker.language}}" data-date-weekstart="{{to.datepicker.weekStart}}"><input class="form-control show nslFormlyDatepicker" name="start" ng-model="model[options.key][\'start\']" placeholder="{{to.placeholder.start}}" ng-readonly="{{to.readOnly}}" ng-disabled="to.disabled" type="text"> <span class="input-group-addon {{to.separator.bgClassName}}" style="min-width:38px;min-height:34px;"><i class="{{to.separator.className}}" ng-if="to.separator.className"></i> <span ng-if="to.separator.text">{{to.separator.text}}</span></span> <input class="form-control show nslFormlyDatepicker" name="end" ng-model="model[options.key][\'end\']" placeholder="{{to.placeholder.end}}" ng-readonly="{{to.readOnly}}" ng-disabled="to.disabled" type="text"></div></div>'),t.put("/src/templates/error.html",'<div nsl-error="" ng-messages="fc.$error" ng-if="options.validation.errorExistsAndShouldBeVisible" class="error-messages"><div uib-tooltip="{{ message(fc.$viewValue, fc.$modelValue, this)}}" tooltip-placement="top" tooltip-is-open="true" tooltip-trigger="manual" ng-message="{{ ::name }}" ng-repeat="(name, message) in ::options.validation.messages" class="validationTooltip"></div></div><formly-transclude></formly-transclude>'),t.put("/src/templates/fieldset.html","<fieldset><legend>{{to.label}} {{to.required ? '*' : ''}}</legend><formly-transclude></formly-transclude></fieldset>"),t.put("/src/templates/img.html",'<div class="form-group" ng-hide="to.hide"><img ng-src="{{model[options.key]}}" style="{{to.style}}"></div>'),t.put("/src/templates/input.html",'<div class="form-group" ng-hide="to.hide"><input class="form-control" ng-model="model[options.key]" placeholder="{{to.placeholder}}" ng-readonly="{{to.readOnly}}" ng-disabled="to.disabled" type="{{to.password ? \'password\' : (to.type ? to.type : \'text\')}}"> <span class="{{to.feedback.className}} form-control-feedback">{{to.feedback.text}}</span></div>'),t.put("/src/templates/label.html",'<div class="form-group" ng-hide="to.hide"><label for="{{id}}" class="control-label" ng-show="to.label"><span ng-bind-html="to.label"></span> <span ng-if="to.required" class="required-field">*</span></label><div><formly-transclude></formly-transclude></div><em id="{{id}}_description" class="help-block" ng-if="options.templateOptions.description" style="opacity:0.6">{{options.templateOptions.description}}</em></div>'),t.put("/src/templates/multiselect.html",'<div ng-hide="to.hide"><select ts-select2="to.config" ng-change="to.ngChange()" ng-model="model[options.key]" multiple="multiple"><option value="{{key}}" ng-repeat="(key, value) in to.options">{{value | translate}}</option></select></div>'),t.put("/src/templates/radio-inline.html",'<div class="radio-group" ng-hide="to.hide"><div ng-repeat="(key, option) in to.options" class="radio-inline"><label><input type="radio" ng-disabled="to.disabled" id="{{id + \'_\'+ $index}}" tabindex="0" ng-value="option[to.valueProp || \'id\']" ng-model="model[options.key]">{{option[to.labelProp || \'text\']}}</label></div></div>'),t.put("/src/templates/radio.html",'<div class="radio-group" ng-hide="to.hide"><div ng-repeat="(key, option) in to.options" class="radio margin-right-20"><label><input type="radio" ng-disabled="to.readOnly || to.disabled" id="{{id + \'_\'+ $index}}" tabindex="0" ng-value="option[to.valueProp || \'id\']" ng-model="model[options.key]">{{option[to.labelProp || \'text\']}}</label></div></div>'),t.put("/src/templates/repeat-section.html",'<div ng-hide="to.hide"><fieldset><legend>{{to.label}}</legend><div class="{{hideRepeat}}"><div class="repeatsection" ng-repeat="element in model[options.key]" ng-init="fields = copyFields(to.fields)"><formly-form fields="fields" model="element" form="form"></formly-form><div style="margin-bottom:20px;" class="{{to.removeBtn.className}}"><button type="button" title="{{to.removeBtn.title}}" class="btn btn-danger btn-o" ng-click="removeItem($index)"><span class="{{to.removeBtn.spanClassName}}"></span>{{to.removeBtn.text}}</button></div><hr></div><p><button ng-repeat="button in to.buttons" type="button" ng-class="button.className" ng-click="button.click($event)" ng-bind-html="button.text" title="{{button.title}}" class="btn"></button></p></div></fieldset></div>'),t.put("/src/templates/search.html",'<select ts-select2="to.config" ng-model="model[options.key]" ng-hide="to.hide" data-text-field="to.textField" data-text-fn="to.textFn"></select>'),t.put("/src/templates/select.html",'<div ng-hide="to.hide"><select ts-select2="to.config" ng-change="to.ngChange()" ng-model="model[options.key]" ng-options="key as value | translate for (key, value) in to.options"></select></div>'),t.put("/src/templates/sortable-repeat-section.html",'<div ng-hide="to.hide"><fieldset><legend>{{to.label}}</legend><div class="{{hideRepeat}}"><div class="sortable-container" sv-root="" sv-on-sort="" sv-part="model[options.key]"><div class="repeatsection" ng-repeat="element in model[options.key]" sv-element="opts" ng-init="fields = copyFields(to.fields)"><div class="input-group sortable-element"><div class="input-group-addon {{to.handler.className}}" sv-handle="">{{$index + 1}}.</div><div><div class="panel panel-default"><div class="panel-heading clearfix" ng-show="{{to.panel.header.show}}"><h4 class="panel-title pull-left" style="padding-top: 7.5px;"><span ng-show="{{to.panel.header.orderNum}}" ng-bind-html="getPanelHeader($index)"></span></h4><button type="button" ng-click="element.open = !element.open" class="btn btn-link pull-right"><span class="glyphicon icon" ng-class="{\'glyphicon-chevron-up\':element.open,\'glyphicon-chevron-down\':!element.open}"></span></button></div><div class="panel-body" ng-show="element.open || {{!to.panel.header.show}}"><formly-form fields="fields" model="element" form="form"></formly-form><div style="margin-bottom:20px;" class="{{to.removeBtn.className}}"><button type="button" title="{{to.removeBtn.title}}" class="btn btn-danger btn-o" ng-click="removeItem($index)"><span class="{{to.removeBtn.spanClassName}}"></span>{{to.removeBtn.text}}</button></div></div></div></div></div></div></div><p><button ng-repeat="button in to.buttons" type="button" ng-class="button.className" ng-click="button.click($event)" ng-bind-html="button.text" title="{{button.title}}" class="btn"></button></p></div></fieldset></div>'),t.put("/src/templates/spinner.html",'<div class="form-group" ng-hide="to.hide"><input nsl-touchspin="" class="form-control text-center" type="text" ng-model="model[options.key]" data-min="to.data.min" data-max="to.data.max" data-step="to.data.step" data-stepinterval="to.data.stepInterval" data-decimals="to.data.decimals" data-boost-at="to.data.boostAt" data-max-boosted-step="to.data.maxBoostedStep" data-prefix="to.data.prefix" data-postfix="to.data.postfix" data-vertical-buttoms="to.data.verticalButtons"></div>'),t.put("/src/templates/static.html",'<div class="form-group" ng-hide="to.hide"><p class="form-control-static">{{model[options.key]}}</p></div>'),t.put("/src/templates/switch.html",'<input type="checkbox" class="js-switch" ui-switch="" ng-disabled="to.readOnly || to.disabled" ng-hide="to.hide" id="{{id}}-chk" ng-model="model[options.key]">'),t.put("/src/templates/tags.html",'<div ng-hide="to.hide"><select ts-select2="to.config" ng-model="model[options.key]" ng-options="option for option in to.options track by option" data-tags="true" multiple="multiple"></select></div>'),t.put("/src/templates/textarea.html",'<textarea class="form-control" rows="{{options.templateOptions.rows? options.templateOptions.rows: \'5\'}}" placeholder="{{options.templateOptions.placeholder}}" ng-disabled="to.disabled" ng-hide="to.hide" ng-model="model[options.key]"></textarea>'),t.put("/src/templates/time.html",'<div class="form-group" ng-hide="to.hide"><div class="input-group clockpicker nslFormlyTimepicker"><input type="text" class="form-control" value="08:00" ng-model="model[options.key]" ng-disabled="to.disabled"> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span></div></div>')}]);